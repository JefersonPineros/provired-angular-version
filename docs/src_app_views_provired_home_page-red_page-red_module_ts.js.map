{"version":3,"file":"src_app_views_provired_home_page-red_page-red_module_ts.js","mappings":"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","sources":["./src/app/services/home/vencimientos/vencimientos.service.ts","./src/app/views/provired/home/page-red/page-red-routing.module.ts","./src/app/views/provired/home/page-red/page-red.component.ts","./src/app/views/provired/home/page-red/page-red.component.html","./src/app/views/provired/home/page-red/page-red.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, map } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { SessionStorageService } from '../../utils/session-storage.service';\nimport { ResponseLogin } from 'src/app/models/login/responseLogin';\nimport { Vencimientos } from 'src/app/models/home/vencimientos/vencimientos';\nimport { RequestModel } from 'src/app/utils/generateRequestModel';\nimport { GeneralConst } from 'src/app/constans/general-const';\n@Injectable({\n  providedIn: 'root',\n})\nexport class VencimientosService {\n  private sessionLog: ResponseLogin = new ResponseLogin();\n\n  constructor(\n    private http: HttpClient,\n    private session: SessionStorageService\n  ) {}\n\n  getVencimientos(): Observable<Array<Vencimientos>> {\n    let sess = this.session.getSession();\n    const { user } = sess;\n    let generarReq = new RequestModel();\n\n    let req = generarReq.generateModel(\n      GeneralConst.CONTROLLERS_METHODS[1].controller,\n      GeneralConst.CONTROLLERS_METHODS[1].method,\n      { user }\n    );\n\n    this.sessionLog = this.session.getSession();\n    return this.http\n      .post<Array<Vencimientos>>(environment.apiBaseUrl + 'index', req)\n      .pipe(\n        map((res: any) => {\n          let status = res['status' as any];\n          if (status == 200) {\n            return res.data;\n          } else {\n            throw new Error('Se ha presentado un error');\n          }\n        })\n      );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { PageRedComponent } from './page-red.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'start',\n    pathMatch: 'full'\n  },\n  {\n    path: 'start',\n    component: PageRedComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PageRedRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { MessageService } from 'primeng/api';\nimport { Vencimientos } from 'src/app/models/home/vencimientos/vencimientos';\nimport { ResponseLogin } from 'src/app/models/login/responseLogin';\nimport { VencimientosService } from 'src/app/services/home/vencimientos/vencimientos.service';\nimport { BreadcrumbService } from 'src/app/services/utils/app.breadcrumb.service';\nimport { SessionStorageService } from 'src/app/services/utils/session-storage.service';\n\n@Component({\n  selector: 'app-page-red',\n  templateUrl: './page-red.component.html',\n  styleUrls: ['./page-red.component.scss'],\n  providers: [MessageService],\n})\nexport class PageRedComponent implements OnInit {\n  public sessionReq: ResponseLogin = new ResponseLogin();\n\n  public redirect: boolean = false;\n\n  public terminos: boolean = false;\n\n  public vencimientosList: Array<Vencimientos> = [];\n\n  constructor(\n    public breadCrumService: BreadcrumbService,\n    private session: SessionStorageService,\n    private vencimientos: VencimientosService,\n    private router: Router,\n    private spinner: NgxSpinnerService\n  ) {}\n\n  ngOnInit(): void {\n    try {\n      this.sessionReq = this.session.getSession();\n      this.redirect = this.sessionReq.redirect!;\n      this.terminos = this.sessionReq.terminos_ok!;\n    } catch (error) {\n      console.log(error);\n    }\n\n    this.breadCrumService.setItems([{ label: 'Inicio' }]);\n    this.spinner.show();\n    this.vencimientos.getVencimientos().subscribe({\n      next: (res) => {\n        if (res.length > 0) {\n          this.vencimientosList = res;\n        }\n        this.spinner.hide();\n      },\n      error: (error) => {\n        this.spinner.hide();\n        console.log(error);\n      },\n    });\n  }\n\n  actionSeeMore(): void {\n    this.router.navigate(['provired/home-provired/home/inicio/audiencia']);\n  }\n}\n","<div *ngIf=\"sessionReq.tipousuario == 'S'\" class=\"grid\">\r\n  <div class=\"col-12\" *ngIf=\"vencimientosList.length > 0; else noContent\">\r\n    <div class=\"grid\">\r\n      <app-card-component\r\n        class=\"lg:col-8 xl:col-8 col-12 sm:col-12 lg:col-offset-2 xl:col-offset-2\"\r\n      >\r\n        <ng-template pTemplate=\"header\">\r\n          <div class=\"grid\">\r\n            <div class=\"col-12\">\r\n              <div class=\"flex flex-column-reverse mt-4\">\r\n                <div class=\"flex align-items-center justify-content-center\">\r\n                  <h4>Audiencias y/o Vencimientos Pr√≥ximos</h4>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"content\">\r\n          <div class=\"p-2\">\r\n            <app-tabla-component\r\n              [cols]=\"[\r\n                { field: 'name_ciudad', header: 'Cidad' },\r\n                { field: 'name_despacho', header: 'Despacho' },\r\n                {\r\n                  field: 'fecha_vence_terminos',\r\n                  header: 'Fecha',\r\n                  isFecha: true\r\n                }\r\n              ]\"\r\n              [data]=\"vencimientosList\"\r\n              [fixStyleTable]=\"true\"\r\n              [stripedTable]=\"true\"\r\n            >\r\n            </app-tabla-component>\r\n          </div>\r\n          <div class=\"mt-3 flex flex-column-reverse\">\r\n            <div class=\"flex align-items-center justify-content-center\">\r\n              <app-button-component\r\n                nameButton=\"Ver m√°s\"\r\n                (eventEmiter)=\"actionSeeMore()\"\r\n              ></app-button-component>\r\n            </div>\r\n          </div>\r\n        </ng-template>\r\n      </app-card-component>\r\n    </div>\r\n  </div>\r\n  <ng-template #noContent>\r\n    <div class=\"col-12 mt-4\">\r\n      <div\r\n        class=\"lg:col-8 xl:col-8 col-12 sm:col-12 lg:col-offset-2 xl:col-offset-2\"\r\n      >\r\n        <app-card-component>\r\n          <ng-template pTemplate=\"header\">\r\n            <div class=\"grid\">\r\n              <div class=\"col-12\">\r\n                <div class=\"flex flex-column-reverse mt-4\">\r\n                  <div class=\"flex align-items-center justify-content-center\">\r\n                    <h4>Audiencias y/o Vencimientos Pr√≥ximos</h4>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"content\">\r\n            <div class=\"grid\">\r\n              <div class=\"col-12 ml-4\">\r\n                No tiene audiencias y/o vencimientos programados.\r\n              </div>\r\n            </div>\r\n            <div class=\"grid mt-5\">\r\n              <div class=\"col-12 p-4\">\r\n                <div class=\"text-justify\">\r\n                  Ahora usted puede programar las fechas de audiencias y/o\r\n                  vencimientos de t√©rminos en la plataforma de Provired, dando\r\n                  click en el boton\r\n                  <i class=\"pi pi-calendar-plus\"></i> (PROGRAMAR) que aparece en\r\n                  el REPORTE DE NOTIFICACIONES y en el LISTADO DE PROCESOS\r\n                  ACTIVOS.\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </ng-template>\r\n        </app-card-component>\r\n      </div>\r\n    </div>\r\n  </ng-template>\r\n</div>\r\n\r\n<p-toast></p-toast>\r\n\r\n<ngx-spinner\r\n  bdColor=\"rgba(0, 0, 0, 0.8)\"\r\n  size=\"medium\"\r\n  color=\"#fff\"\r\n  type=\"ball-clip-rotate-multiple\"\r\n  [fullScreen]=\"true\"\r\n>\r\n  <p style=\"color: white\">Loading...</p>\r\n</ngx-spinner>\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PageRedRoutingModule } from './page-red-routing.module';\nimport { PageRedComponent } from './page-red.component';\nimport {\n  ButtonComponentModule,\n  CardComponentModule,\n  TablaComponentModule\n} from 'src/app/components/components.module';\nimport { VencimientosService } from 'src/app/services/home/vencimientos/vencimientos.service';\nimport { RouterModule } from '@angular/router';\nimport { ToastModule } from 'primeng/toast';\nimport { NgxSpinnerModule } from 'ngx-spinner';\n\n\n@NgModule({\n  declarations: [\n    PageRedComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule,\n\n    PageRedRoutingModule,\n    CardComponentModule,\n    TablaComponentModule,\n    ButtonComponentModule,\n    ToastModule,\n    NgxSpinnerModule\n  ],\n  providers: [\n    VencimientosService\n  ]\n})\nexport class PageRedModule { }\n"],"names":["map","environment","ResponseLogin","RequestModel","GeneralConst","VencimientosService","constructor","http","session","getVencimientos","sess","getSession","user","generarReq","req","generateModel","CONTROLLERS_METHODS","controller","method","sessionLog","post","apiBaseUrl","pipe","res","status","data","Error","factory","providedIn","RouterModule","PageRedComponent","routes","path","redirectTo","pathMatch","component","PageRedRoutingModule","forChild","imports","exports","MessageService","i0","breadCrumService","vencimientos","router","spinner","ngOnInit","sessionReq","redirect","terminos","terminos_ok","error","console","log","setItems","label","show","subscribe","next","length","vencimientosList","hide","actionSeeMore","navigate","selectors","features","decls","vars","consts","template","CommonModule","ButtonComponentModule","CardComponentModule","TablaComponentModule","ToastModule","NgxSpinnerModule","PageRedModule","declarations"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}