{"version":3,"file":"default-node_modules_ng-recaptcha_fesm2020_ng-recaptcha_mjs.js","mappings":"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","sources":["./node_modules/ng-recaptcha/fesm2020/ng-recaptcha.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, PLATFORM_ID, Injectable, Inject, Optional, EventEmitter, Component, Input, HostBinding, Output, NgModule, forwardRef, Directive, HostListener } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { of, BehaviorSubject, Subject } from 'rxjs';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\n\nconst RECAPTCHA_LANGUAGE = new InjectionToken(\"recaptcha-language\");\nconst RECAPTCHA_BASE_URL = new InjectionToken(\"recaptcha-base-url\");\nconst RECAPTCHA_NONCE = new InjectionToken(\"recaptcha-nonce-tag\");\nconst RECAPTCHA_SETTINGS = new InjectionToken(\"recaptcha-settings\");\nconst RECAPTCHA_V3_SITE_KEY = new InjectionToken(\"recaptcha-v3-site-key\");\n\nfunction loadScript(renderMode, onLoaded, urlParams, url, nonce) {\n    window.ng2recaptchaloaded = () => {\n        onLoaded(grecaptcha);\n    };\n    const script = document.createElement(\"script\");\n    script.innerHTML = \"\";\n    const baseUrl = url || \"https://www.google.com/recaptcha/api.js\";\n    script.src = `${baseUrl}?render=${renderMode}&onload=ng2recaptchaloaded${urlParams}`;\n    if (nonce) {\n        script.nonce = nonce;\n    }\n    script.async = true;\n    script.defer = true;\n    document.head.appendChild(script);\n}\nconst loader = { loadScript };\n\nclass RecaptchaLoaderService {\n    constructor(\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    platformId, language, baseUrl, nonce, v3SiteKey) {\n        this.platformId = platformId;\n        this.language = language;\n        this.baseUrl = baseUrl;\n        this.nonce = nonce;\n        this.v3SiteKey = v3SiteKey;\n        this.init();\n        this.ready = isPlatformBrowser(this.platformId) ? RecaptchaLoaderService.ready.asObservable() : of();\n    }\n    /** @internal */\n    init() {\n        if (RecaptchaLoaderService.ready) {\n            return;\n        }\n        if (isPlatformBrowser(this.platformId)) {\n            const subject = new BehaviorSubject(null);\n            RecaptchaLoaderService.ready = subject;\n            const langParam = this.language ? \"&hl=\" + this.language : \"\";\n            const renderMode = this.v3SiteKey || \"explicit\";\n            loader.loadScript(renderMode, (grecaptcha) => subject.next(grecaptcha), langParam, this.baseUrl, this.nonce);\n        }\n    }\n}\n/**\n * @internal\n * @nocollapse\n */\nRecaptchaLoaderService.ready = null;\nRecaptchaLoaderService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: RecaptchaLoaderService, deps: [{ token: PLATFORM_ID }, { token: RECAPTCHA_LANGUAGE, optional: true }, { token: RECAPTCHA_BASE_URL, optional: true }, { token: RECAPTCHA_NONCE, optional: true }, { token: RECAPTCHA_V3_SITE_KEY, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nRecaptchaLoaderService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: RecaptchaLoaderService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: RecaptchaLoaderService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: Object, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [RECAPTCHA_LANGUAGE]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [RECAPTCHA_BASE_URL]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [RECAPTCHA_NONCE]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [RECAPTCHA_V3_SITE_KEY]\n                }] }]; } });\n\nlet nextId = 0;\nclass RecaptchaComponent {\n    constructor(elementRef, loader, zone, settings) {\n        this.elementRef = elementRef;\n        this.loader = loader;\n        this.zone = zone;\n        this.id = `ngrecaptcha-${nextId++}`;\n        this.errorMode = \"default\";\n        this.resolved = new EventEmitter();\n        /**\n         * @deprecated `(error) output will be removed in the next major version. Use (errored) instead\n         */\n        // eslint-disable-next-line @angular-eslint/no-output-native\n        this.error = new EventEmitter();\n        this.errored = new EventEmitter();\n        if (settings) {\n            this.siteKey = settings.siteKey;\n            this.theme = settings.theme;\n            this.type = settings.type;\n            this.size = settings.size;\n            this.badge = settings.badge;\n        }\n    }\n    ngAfterViewInit() {\n        this.subscription = this.loader.ready.subscribe((grecaptcha) => {\n            if (grecaptcha != null && grecaptcha.render instanceof Function) {\n                this.grecaptcha = grecaptcha;\n                this.renderRecaptcha();\n            }\n        });\n    }\n    ngOnDestroy() {\n        // reset the captcha to ensure it does not leave anything behind\n        // after the component is no longer needed\n        this.grecaptchaReset();\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n    /**\n     * Executes the invisible recaptcha.\n     * Does nothing if component's size is not set to \"invisible\".\n     */\n    execute() {\n        if (this.size !== \"invisible\") {\n            return;\n        }\n        if (this.widget != null) {\n            this.grecaptcha.execute(this.widget);\n        }\n        else {\n            // delay execution of recaptcha until it actually renders\n            this.executeRequested = true;\n        }\n    }\n    reset() {\n        if (this.widget != null) {\n            if (this.grecaptcha.getResponse(this.widget)) {\n                // Only emit an event in case if something would actually change.\n                // That way we do not trigger \"touching\" of the control if someone does a \"reset\"\n                // on a non-resolved captcha.\n                this.resolved.emit(null);\n            }\n            this.grecaptchaReset();\n        }\n    }\n    /**\n     * ⚠️ Warning! Use this property at your own risk!\n     *\n     * While this member is `public`, it is not a part of the component's public API.\n     * The semantic versioning guarantees _will not be honored_! Thus, you might find that this property behavior changes in incompatible ways in minor or even patch releases.\n     * You are **strongly advised** against using this property.\n     * Instead, use more idiomatic ways to get reCAPTCHA value, such as `resolved` EventEmitter, or form-bound methods (ngModel, formControl, and the likes).å\n     */\n    get __unsafe_widgetValue() {\n        return this.widget != null ? this.grecaptcha.getResponse(this.widget) : null;\n    }\n    /** @internal */\n    expired() {\n        this.resolved.emit(null);\n    }\n    /** @internal */\n    onError(args) {\n        this.error.emit(args);\n        this.errored.emit(args);\n    }\n    /** @internal */\n    captchaResponseCallback(response) {\n        this.resolved.emit(response);\n    }\n    /** @internal */\n    grecaptchaReset() {\n        if (this.widget != null) {\n            this.zone.runOutsideAngular(() => this.grecaptcha.reset(this.widget));\n        }\n    }\n    /** @internal */\n    renderRecaptcha() {\n        // This `any` can be removed after @types/grecaptcha get updated\n        const renderOptions = {\n            badge: this.badge,\n            callback: (response) => {\n                this.zone.run(() => this.captchaResponseCallback(response));\n            },\n            \"expired-callback\": () => {\n                this.zone.run(() => this.expired());\n            },\n            sitekey: this.siteKey,\n            size: this.size,\n            tabindex: this.tabIndex,\n            theme: this.theme,\n            type: this.type,\n        };\n        if (this.errorMode === \"handled\") {\n            renderOptions[\"error-callback\"] = (...args) => {\n                this.zone.run(() => this.onError(args));\n            };\n        }\n        this.widget = this.grecaptcha.render(this.elementRef.nativeElement, renderOptions);\n        if (this.executeRequested === true) {\n            this.executeRequested = false;\n            this.execute();\n        }\n    }\n}\nRecaptchaComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: RecaptchaComponent, deps: [{ token: i0.ElementRef }, { token: RecaptchaLoaderService }, { token: i0.NgZone }, { token: RECAPTCHA_SETTINGS, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nRecaptchaComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.0\", type: RecaptchaComponent, selector: \"re-captcha\", inputs: { id: \"id\", siteKey: \"siteKey\", theme: \"theme\", type: \"type\", size: \"size\", tabIndex: \"tabIndex\", badge: \"badge\", errorMode: \"errorMode\" }, outputs: { resolved: \"resolved\", error: \"error\", errored: \"errored\" }, host: { properties: { \"attr.id\": \"this.id\" } }, exportAs: [\"reCaptcha\"], ngImport: i0, template: ``, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: RecaptchaComponent, decorators: [{\n            type: Component,\n            args: [{\n                    exportAs: \"reCaptcha\",\n                    selector: \"re-captcha\",\n                    template: ``,\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: RecaptchaLoaderService }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [RECAPTCHA_SETTINGS]\n                }] }]; }, propDecorators: { id: [{\n                type: Input\n            }, {\n                type: HostBinding,\n                args: [\"attr.id\"]\n            }], siteKey: [{\n                type: Input\n            }], theme: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], size: [{\n                type: Input\n            }], tabIndex: [{\n                type: Input\n            }], badge: [{\n                type: Input\n            }], errorMode: [{\n                type: Input\n            }], resolved: [{\n                type: Output\n            }], error: [{\n                type: Output\n            }], errored: [{\n                type: Output\n            }] } });\n\nclass RecaptchaCommonModule {\n}\nRecaptchaCommonModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: RecaptchaCommonModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nRecaptchaCommonModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.0.0\", ngImport: i0, type: RecaptchaCommonModule, declarations: [RecaptchaComponent], exports: [RecaptchaComponent] });\nRecaptchaCommonModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: RecaptchaCommonModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: RecaptchaCommonModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [RecaptchaComponent],\n                    exports: [RecaptchaComponent],\n                }]\n        }] });\n\nclass RecaptchaModule {\n}\nRecaptchaModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: RecaptchaModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nRecaptchaModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.0.0\", ngImport: i0, type: RecaptchaModule, imports: [RecaptchaCommonModule], exports: [RecaptchaComponent] });\nRecaptchaModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: RecaptchaModule, providers: [RecaptchaLoaderService], imports: [RecaptchaCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: RecaptchaModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [RecaptchaComponent],\n                    imports: [RecaptchaCommonModule],\n                    providers: [RecaptchaLoaderService],\n                }]\n        }] });\n\n/**\n * The main service for working with reCAPTCHA v3 APIs.\n *\n * Use the `execute` method for executing a single action, and\n * `onExecute` observable for listening to all actions at once.\n */\nclass ReCaptchaV3Service {\n    constructor(zone, siteKey, \n    // eslint-disable-next-line @typescript-eslint/ban-types\n    platformId, baseUrl, nonce, language) {\n        /** @internal */\n        this.onLoadComplete = (grecaptcha) => {\n            this.grecaptcha = grecaptcha;\n            if (this.actionBacklog && this.actionBacklog.length > 0) {\n                this.actionBacklog.forEach(([action, subject]) => this.executeActionWithSubject(action, subject));\n                this.actionBacklog = undefined;\n            }\n        };\n        this.zone = zone;\n        this.isBrowser = isPlatformBrowser(platformId);\n        this.siteKey = siteKey;\n        this.nonce = nonce;\n        this.language = language;\n        this.baseUrl = baseUrl;\n        this.init();\n    }\n    get onExecute() {\n        if (!this.onExecuteSubject) {\n            this.onExecuteSubject = new Subject();\n            this.onExecuteObservable = this.onExecuteSubject.asObservable();\n        }\n        return this.onExecuteObservable;\n    }\n    get onExecuteError() {\n        if (!this.onExecuteErrorSubject) {\n            this.onExecuteErrorSubject = new Subject();\n            this.onExecuteErrorObservable = this.onExecuteErrorSubject.asObservable();\n        }\n        return this.onExecuteErrorObservable;\n    }\n    /**\n     * Executes the provided `action` with reCAPTCHA v3 API.\n     * Use the emitted token value for verification purposes on the backend.\n     *\n     * For more information about reCAPTCHA v3 actions and tokens refer to the official documentation at\n     * https://developers.google.com/recaptcha/docs/v3.\n     *\n     * @param {string} action the action to execute\n     * @returns {Observable<string>} an `Observable` that will emit the reCAPTCHA v3 string `token` value whenever ready.\n     * The returned `Observable` completes immediately after emitting a value.\n     */\n    execute(action) {\n        const subject = new Subject();\n        if (this.isBrowser) {\n            if (!this.grecaptcha) {\n                if (!this.actionBacklog) {\n                    this.actionBacklog = [];\n                }\n                this.actionBacklog.push([action, subject]);\n            }\n            else {\n                this.executeActionWithSubject(action, subject);\n            }\n        }\n        return subject.asObservable();\n    }\n    /** @internal */\n    executeActionWithSubject(action, subject) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const onError = (error) => {\n            this.zone.run(() => {\n                subject.error(error);\n                if (this.onExecuteErrorSubject) {\n                    // We don't know any better at this point, unfortunately, so have to resort to `any`\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                    this.onExecuteErrorSubject.next({ action, error });\n                }\n            });\n        };\n        this.zone.runOutsideAngular(() => {\n            try {\n                this.grecaptcha.execute(this.siteKey, { action }).then((token) => {\n                    this.zone.run(() => {\n                        subject.next(token);\n                        subject.complete();\n                        if (this.onExecuteSubject) {\n                            this.onExecuteSubject.next({ action, token });\n                        }\n                    });\n                }, onError);\n            }\n            catch (e) {\n                onError(e);\n            }\n        });\n    }\n    /** @internal */\n    init() {\n        if (this.isBrowser) {\n            if (\"grecaptcha\" in window) {\n                this.grecaptcha = grecaptcha;\n            }\n            else {\n                const langParam = this.language ? \"&hl=\" + this.language : \"\";\n                loader.loadScript(this.siteKey, this.onLoadComplete, langParam, this.baseUrl, this.nonce);\n            }\n        }\n    }\n}\nReCaptchaV3Service.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: ReCaptchaV3Service, deps: [{ token: i0.NgZone }, { token: RECAPTCHA_V3_SITE_KEY }, { token: PLATFORM_ID }, { token: RECAPTCHA_BASE_URL, optional: true }, { token: RECAPTCHA_NONCE, optional: true }, { token: RECAPTCHA_LANGUAGE, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nReCaptchaV3Service.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: ReCaptchaV3Service });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: ReCaptchaV3Service, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [RECAPTCHA_V3_SITE_KEY]\n                }] }, { type: Object, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [RECAPTCHA_BASE_URL]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [RECAPTCHA_NONCE]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [RECAPTCHA_LANGUAGE]\n                }] }]; } });\n\nclass RecaptchaV3Module {\n}\nRecaptchaV3Module.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: RecaptchaV3Module, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nRecaptchaV3Module.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.0.0\", ngImport: i0, type: RecaptchaV3Module });\nRecaptchaV3Module.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: RecaptchaV3Module, providers: [ReCaptchaV3Service] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: RecaptchaV3Module, decorators: [{\n            type: NgModule,\n            args: [{\n                    providers: [ReCaptchaV3Service],\n                }]\n        }] });\n\nclass RecaptchaValueAccessorDirective {\n    constructor(host) {\n        this.host = host;\n        this.requiresControllerReset = false;\n    }\n    writeValue(value) {\n        if (!value) {\n            this.host.reset();\n        }\n        else {\n            // In this case, it is most likely that a form controller has requested to write a specific value into the component.\n            // This isn't really a supported case - reCAPTCHA values are single-use, and, in a sense, readonly.\n            // What this means is that the form controller has recaptcha control state of X, while reCAPTCHA itself can't \"restore\"\n            // to that state. In order to make form controller aware of this discrepancy, and to fix the said misalignment,\n            // we'll be telling the controller to \"reset\" the value back to null.\n            if (this.host.__unsafe_widgetValue !== value && Boolean(this.host.__unsafe_widgetValue) === false) {\n                this.requiresControllerReset = true;\n            }\n        }\n    }\n    registerOnChange(fn) {\n        this.onChange = fn;\n        if (this.requiresControllerReset) {\n            this.requiresControllerReset = false;\n            this.onChange(null);\n        }\n    }\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    onResolve($event) {\n        if (this.onChange) {\n            this.onChange($event);\n        }\n        if (this.onTouched) {\n            this.onTouched();\n        }\n    }\n}\nRecaptchaValueAccessorDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: RecaptchaValueAccessorDirective, deps: [{ token: RecaptchaComponent }], target: i0.ɵɵFactoryTarget.Directive });\nRecaptchaValueAccessorDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.0\", type: RecaptchaValueAccessorDirective, selector: \"re-captcha[formControlName],re-captcha[formControl],re-captcha[ngModel]\", host: { listeners: { \"resolved\": \"onResolve($event)\" } }, providers: [\n        {\n            multi: true,\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => RecaptchaValueAccessorDirective),\n        },\n    ], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: RecaptchaValueAccessorDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    providers: [\n                        {\n                            multi: true,\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: forwardRef(() => RecaptchaValueAccessorDirective),\n                        },\n                    ],\n                    selector: \"re-captcha[formControlName],re-captcha[formControl],re-captcha[ngModel]\",\n                }]\n        }], ctorParameters: function () { return [{ type: RecaptchaComponent }]; }, propDecorators: { onResolve: [{\n                type: HostListener,\n                args: [\"resolved\", [\"$event\"]]\n            }] } });\n\nclass RecaptchaFormsModule {\n}\nRecaptchaFormsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: RecaptchaFormsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nRecaptchaFormsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.0.0\", ngImport: i0, type: RecaptchaFormsModule, declarations: [RecaptchaValueAccessorDirective], imports: [FormsModule, RecaptchaCommonModule], exports: [RecaptchaValueAccessorDirective] });\nRecaptchaFormsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: RecaptchaFormsModule, imports: [FormsModule, RecaptchaCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: RecaptchaFormsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [RecaptchaValueAccessorDirective],\n                    exports: [RecaptchaValueAccessorDirective],\n                    imports: [FormsModule, RecaptchaCommonModule],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { RECAPTCHA_BASE_URL, RECAPTCHA_LANGUAGE, RECAPTCHA_NONCE, RECAPTCHA_SETTINGS, RECAPTCHA_V3_SITE_KEY, ReCaptchaV3Service, RecaptchaComponent, RecaptchaFormsModule, RecaptchaLoaderService, RecaptchaModule, RecaptchaV3Module, RecaptchaValueAccessorDirective };\n//# sourceMappingURL=ng-recaptcha.mjs.map\n"],"names":["i0","InjectionToken","PLATFORM_ID","Injectable","Inject","Optional","EventEmitter","Component","Input","HostBinding","Output","NgModule","forwardRef","Directive","HostListener","isPlatformBrowser","of","BehaviorSubject","Subject","NG_VALUE_ACCESSOR","FormsModule","RECAPTCHA_LANGUAGE","RECAPTCHA_BASE_URL","RECAPTCHA_NONCE","RECAPTCHA_SETTINGS","RECAPTCHA_V3_SITE_KEY","loadScript","renderMode","onLoaded","urlParams","url","nonce","window","ng2recaptchaloaded","grecaptcha","script","document","createElement","innerHTML","baseUrl","src","async","defer","head","appendChild","loader","RecaptchaLoaderService","constructor","platformId","language","v3SiteKey","init","ready","asObservable","subject","langParam","next","ɵfac","ɵprov","type","Object","decorators","args","undefined","nextId","RecaptchaComponent","elementRef","zone","settings","id","errorMode","resolved","error","errored","siteKey","theme","size","badge","ngAfterViewInit","subscription","subscribe","render","Function","renderRecaptcha","ngOnDestroy","grecaptchaReset","unsubscribe","execute","widget","executeRequested","reset","getResponse","emit","__unsafe_widgetValue","expired","onError","captchaResponseCallback","response","runOutsideAngular","renderOptions","callback","run","sitekey","tabindex","tabIndex","nativeElement","ElementRef","NgZone","ɵcmp","exportAs","selector","template","RecaptchaCommonModule","ɵmod","ɵinj","declarations","exports","RecaptchaModule","imports","providers","ReCaptchaV3Service","onLoadComplete","actionBacklog","length","forEach","action","executeActionWithSubject","isBrowser","onExecute","onExecuteSubject","onExecuteObservable","onExecuteError","onExecuteErrorSubject","onExecuteErrorObservable","push","then","token","complete","e","RecaptchaV3Module","RecaptchaValueAccessorDirective","host","requiresControllerReset","writeValue","value","Boolean","registerOnChange","fn","onChange","registerOnTouched","onTouched","onResolve","$event","ɵdir","multi","provide","useExisting","RecaptchaFormsModule"],"sourceRoot":"webpack:///","x_google_ignoreList":[0]}